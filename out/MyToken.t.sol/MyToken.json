{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_nft",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "EMISSION_RATE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "calculateTokens",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nft",
      "outputs": [
        {
          "internalType": "contract IERC721",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC721Received",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "stake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "tokenOwnerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "tokenStakedAt",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "unstake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405262015180620000166012600a6200026c565b6200002390603262000284565b6200002f91906200029e565b6009553480156200003f57600080fd5b5060405162001369380380620013698339810160408190526200006291620002c1565b6040518060400160405280600781526020016626bcaa37b5b2b760c91b815250604051806040016040528060038152602001624d544b60e81b8152508160039081620000af919062000391565b506004620000be828262000391565b505050620000db620000d56200010160201b60201c565b62000105565b600680546001600160a01b0319166001600160a01b03929092169190911790556200045d565b3390565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b634e487b7160e01b600052601160045260246000fd5b600181815b80851115620001ae57816000190482111562000192576200019262000157565b80851615620001a057918102915b93841c939080029062000172565b509250929050565b600082620001c75750600162000266565b81620001d65750600062000266565b8160018114620001ef5760028114620001fa576200021a565b600191505062000266565b60ff8411156200020e576200020e62000157565b50506001821b62000266565b5060208310610133831016604e8410600b84101617156200023f575081810a62000266565b6200024b83836200016d565b806000190482111562000262576200026262000157565b0290505b92915050565b60006200027d60ff841683620001b6565b9392505050565b808202811582820484141762000266576200026662000157565b600082620002bc57634e487b7160e01b600052601260045260246000fd5b500490565b600060208284031215620002d457600080fd5b81516001600160a01b03811681146200027d57600080fd5b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200031757607f821691505b6020821081036200033857634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200038c57600081815260208120601f850160051c81016020861015620003675750805b601f850160051c820191505b81811015620003885782815560010162000373565b5050505b505050565b81516001600160401b03811115620003ad57620003ad620002ec565b620003c581620003be845462000302565b846200033e565b602080601f831160018114620003fd5760008415620003e45750858301515b600019600386901b1c1916600185901b17855562000388565b600085815260208120601f198616915b828110156200042e578886015182559484019460019091019084016200040d565b50858210156200044d5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b610efc806200046d6000396000f3fe608060405234801561001057600080fd5b50600436106101425760003560e01c806370a08231116100b857806395d89b411161007c57806395d89b41146102ed578063a457c2d7146102f5578063a694fc3a14610308578063a9059cbb1461031b578063dd62ed3e1461032e578063f2fde38b1461034157600080fd5b806370a082311461026f578063715018a61461029857806371aa60fd146102a057806389885a59146102b35780638da5cb5b146102dc57600080fd5b806323b872dd1161010a57806323b872dd146101da57806324bf238c146101ed5780632e17de781461020d578063313ce56714610222578063395093511461023157806347ccca021461024457600080fd5b806301b8199a1461014757806306fdde0314610163578063095ea7b314610178578063150b7a021461019b57806318160ddd146101d2575b600080fd5b61015060095481565b6040519081526020015b60405180910390f35b61016b610354565b60405161015a9190610c10565b61018b610186366004610c7a565b6103e6565b604051901515815260200161015a565b6101b96101a9366004610cba565b630a85bd0160e11b949350505050565b6040516001600160e01b0319909116815260200161015a565b600254610150565b61018b6101e8366004610d96565b610400565b6101506101fb366004610dd2565b60086020526000908152604090205481565b61022061021b366004610dd2565b610424565b005b6040516012815260200161015a565b61018b61023f366004610c7a565b610528565b600654610257906001600160a01b031681565b6040516001600160a01b03909116815260200161015a565b61015061027d366004610deb565b6001600160a01b031660009081526020819052604090205490565b61022061054a565b6101506102ae366004610dd2565b61055e565b6102576102c1366004610dd2565b6007602052600090815260409020546001600160a01b031681565b6005546001600160a01b0316610257565b61016b610590565b61018b610303366004610c7a565b61059f565b610220610316366004610dd2565b61061a565b61018b610329366004610c7a565b6106b1565b61015061033c366004610e06565b6106bf565b61022061034f366004610deb565b6106ea565b60606003805461036390610e39565b80601f016020809104026020016040519081016040528092919081815260200182805461038f90610e39565b80156103dc5780601f106103b1576101008083540402835291602001916103dc565b820191906000526020600020905b8154815290600101906020018083116103bf57829003601f168201915b5050505050905090565b6000336103f4818585610763565b60019150505b92915050565b60003361040e858285610887565b610419858585610901565b506001949350505050565b6000818152600760205260409020546001600160a01b031633146104835760405162461bcd60e51b8152602060048201526011602482015270596f752063616e277420756e7374616b6560781b60448201526064015b60405180910390fd5b610495336104908361055e565b610aa5565b6006546040516323b872dd60e01b8152306004820152336024820152604481018390526001600160a01b03909116906323b872dd90606401600060405180830381600087803b1580156104e757600080fd5b505af11580156104fb573d6000803e3d6000fd5b50505060009182525060076020908152604080832080546001600160a01b03191690556008909152812055565b6000336103f481858561053b83836106bf565b6105459190610e89565b610763565b610552610b64565b61055c6000610bbe565b565b60008181526008602052604081205481906105799042610e9c565b9050600954816105899190610eaf565b9392505050565b60606004805461036390610e39565b600033816105ad82866106bf565b90508381101561060d5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b606482015260840161047a565b6104198286868403610763565b600654604051632142170760e11b8152336004820152306024820152604481018390526001600160a01b03909116906342842e0e90606401600060405180830381600087803b15801561066c57600080fd5b505af1158015610680573d6000803e3d6000fd5b50505060009182525060076020908152604080832080546001600160a01b0319163317905560089091529020429055565b6000336103f4818585610901565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6106f2610b64565b6001600160a01b0381166107575760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161047a565b61076081610bbe565b50565b6001600160a01b0383166107c55760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161047a565b6001600160a01b0382166108265760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161047a565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b600061089384846106bf565b905060001981146108fb57818110156108ee5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161047a565b6108fb8484848403610763565b50505050565b6001600160a01b0383166109655760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161047a565b6001600160a01b0382166109c75760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161047a565b6001600160a01b03831660009081526020819052604090205481811015610a3f5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161047a565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36108fb565b6001600160a01b038216610afb5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161047a565b8060026000828254610b0d9190610e89565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b6005546001600160a01b0316331461055c5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161047a565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600060208083528351808285015260005b81811015610c3d57858101830151858201604001528201610c21565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b0381168114610c7557600080fd5b919050565b60008060408385031215610c8d57600080fd5b610c9683610c5e565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b60008060008060808587031215610cd057600080fd5b610cd985610c5e565b9350610ce760208601610c5e565b925060408501359150606085013567ffffffffffffffff80821115610d0b57600080fd5b818701915087601f830112610d1f57600080fd5b813581811115610d3157610d31610ca4565b604051601f8201601f19908116603f01168101908382118183101715610d5957610d59610ca4565b816040528281528a6020848701011115610d7257600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b600080600060608486031215610dab57600080fd5b610db484610c5e565b9250610dc260208501610c5e565b9150604084013590509250925092565b600060208284031215610de457600080fd5b5035919050565b600060208284031215610dfd57600080fd5b61058982610c5e565b60008060408385031215610e1957600080fd5b610e2283610c5e565b9150610e3060208401610c5e565b90509250929050565b600181811c90821680610e4d57607f821691505b602082108103610e6d57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b808201808211156103fa576103fa610e73565b818103818111156103fa576103fa610e73565b80820281158282048414176103fa576103fa610e7356fea264697066735822122082adf491667bf03c778bd3ee64298d944ac76ffe1eaf6ec3b407a0c82a235c7764736f6c63430008120033",
    "sourceMap": "361:1116:37:-:0;;;604:6;584:16;3173:2:19;584::37;:16;:::i;:::-;579:21;;:2;:21;:::i;:::-;578:32;;;;:::i;:::-;547:63;;617:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1976:113:19;;;;;;;;;;;;;-1:-1:-1;;;1976:113:19;;;;;;;;;;;;;;;;-1:-1:-1;;;1976:113:19;;;2050:5;2042;:13;;;;;;:::i;:::-;-1:-1:-1;2065:7:19;:17;2075:7;2065;:17;:::i;:::-;;1976:113;;936:32:18;955:12;:10;;;:12;;:::i;:::-;936:18;:32::i;:::-;677:3:37::1;:19:::0;;-1:-1:-1;;;;;;677:19:37::1;-1:-1:-1::0;;;;;677:19:37;;;::::1;::::0;;;::::1;::::0;;361:1116;;640:96:28;719:10;;640:96::o;2433:187:18:-;2525:6;;;-1:-1:-1;;;;;2541:17:18;;;-1:-1:-1;;;;;;2541:17:18;;;;;;;2573:40;;2525:6;;;2541:17;2525:6;;2573:40;;2506:16;;2573:40;2496:124;2433:187;:::o;14:127:38:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:422;235:1;278:5;235:1;292:270;313:7;303:8;300:21;292:270;;;372:4;368:1;364:6;360:17;354:4;351:27;348:53;;;381:18;;:::i;:::-;431:7;421:8;417:22;414:55;;;451:16;;;;414:55;530:22;;;;490:15;;;;292:270;;;296:3;146:422;;;;;:::o;573:806::-;622:5;652:8;642:80;;-1:-1:-1;693:1:38;707:5;;642:80;741:4;731:76;;-1:-1:-1;778:1:38;792:5;;731:76;823:4;841:1;836:59;;;;909:1;904:130;;;;816:218;;836:59;866:1;857:10;;880:5;;;904:130;941:3;931:8;928:17;925:43;;;948:18;;:::i;:::-;-1:-1:-1;;1004:1:38;990:16;;1019:5;;816:218;;1118:2;1108:8;1105:16;1099:3;1093:4;1090:13;1086:36;1080:2;1070:8;1067:16;1062:2;1056:4;1053:12;1049:35;1046:77;1043:159;;;-1:-1:-1;1155:19:38;;;1187:5;;1043:159;1234:34;1259:8;1253:4;1234:34;:::i;:::-;1304:6;1300:1;1296:6;1292:19;1283:7;1280:32;1277:58;;;1315:18;;:::i;:::-;1353:20;;-1:-1:-1;573:806:38;;;;;:::o;1384:140::-;1442:5;1471:47;1512:4;1502:8;1498:19;1492:4;1471:47;:::i;:::-;1462:56;1384:140;-1:-1:-1;;;1384:140:38:o;1529:168::-;1602:9;;;1633;;1650:15;;;1644:22;;1630:37;1620:71;;1671:18;;:::i;1702:217::-;1742:1;1768;1758:132;;1812:10;1807:3;1803:20;1800:1;1793:31;1847:4;1844:1;1837:15;1875:4;1872:1;1865:15;1758:132;-1:-1:-1;1904:9:38;;1702:217::o;1924:290::-;1994:6;2047:2;2035:9;2026:7;2022:23;2018:32;2015:52;;;2063:1;2060;2053:12;2015:52;2089:16;;-1:-1:-1;;;;;2134:31:38;;2124:42;;2114:70;;2180:1;2177;2170:12;2219:127;2280:10;2275:3;2271:20;2268:1;2261:31;2311:4;2308:1;2301:15;2335:4;2332:1;2325:15;2351:380;2430:1;2426:12;;;;2473;;;2494:61;;2548:4;2540:6;2536:17;2526:27;;2494:61;2601:2;2593:6;2590:14;2570:18;2567:38;2564:161;;2647:10;2642:3;2638:20;2635:1;2628:31;2682:4;2679:1;2672:15;2710:4;2707:1;2700:15;2564:161;;2351:380;;;:::o;2862:545::-;2964:2;2959:3;2956:11;2953:448;;;3000:1;3025:5;3021:2;3014:17;3070:4;3066:2;3056:19;3140:2;3128:10;3124:19;3121:1;3117:27;3111:4;3107:38;3176:4;3164:10;3161:20;3158:47;;;-1:-1:-1;3199:4:38;3158:47;3254:2;3249:3;3245:12;3242:1;3238:20;3232:4;3228:31;3218:41;;3309:82;3327:2;3320:5;3317:13;3309:82;;;3372:17;;;3353:1;3342:13;3309:82;;;3313:3;;;2953:448;2862:545;;;:::o;3583:1352::-;3703:10;;-1:-1:-1;;;;;3725:30:38;;3722:56;;;3758:18;;:::i;:::-;3787:97;3877:6;3837:38;3869:4;3863:11;3837:38;:::i;:::-;3831:4;3787:97;:::i;:::-;3939:4;;4003:2;3992:14;;4020:1;4015:663;;;;4722:1;4739:6;4736:89;;;-1:-1:-1;4791:19:38;;;4785:26;4736:89;-1:-1:-1;;3540:1:38;3536:11;;;3532:24;3528:29;3518:40;3564:1;3560:11;;;3515:57;4838:81;;3985:944;;4015:663;2809:1;2802:14;;;2846:4;2833:18;;-1:-1:-1;;4051:20:38;;;4169:236;4183:7;4180:1;4177:14;4169:236;;;4272:19;;;4266:26;4251:42;;4364:27;;;;4332:1;4320:14;;;;4199:19;;4169:236;;;4173:3;4433:6;4424:7;4421:19;4418:201;;;4494:19;;;4488:26;-1:-1:-1;;4577:1:38;4573:14;;;4589:3;4569:24;4565:37;4561:42;4546:58;4531:74;;4418:201;-1:-1:-1;;;;;4665:1:38;4649:14;;;4645:22;4632:36;;-1:-1:-1;3583:1352:38:o;:::-;361:1116:37;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106101425760003560e01c806370a08231116100b857806395d89b411161007c57806395d89b41146102ed578063a457c2d7146102f5578063a694fc3a14610308578063a9059cbb1461031b578063dd62ed3e1461032e578063f2fde38b1461034157600080fd5b806370a082311461026f578063715018a61461029857806371aa60fd146102a057806389885a59146102b35780638da5cb5b146102dc57600080fd5b806323b872dd1161010a57806323b872dd146101da57806324bf238c146101ed5780632e17de781461020d578063313ce56714610222578063395093511461023157806347ccca021461024457600080fd5b806301b8199a1461014757806306fdde0314610163578063095ea7b314610178578063150b7a021461019b57806318160ddd146101d2575b600080fd5b61015060095481565b6040519081526020015b60405180910390f35b61016b610354565b60405161015a9190610c10565b61018b610186366004610c7a565b6103e6565b604051901515815260200161015a565b6101b96101a9366004610cba565b630a85bd0160e11b949350505050565b6040516001600160e01b0319909116815260200161015a565b600254610150565b61018b6101e8366004610d96565b610400565b6101506101fb366004610dd2565b60086020526000908152604090205481565b61022061021b366004610dd2565b610424565b005b6040516012815260200161015a565b61018b61023f366004610c7a565b610528565b600654610257906001600160a01b031681565b6040516001600160a01b03909116815260200161015a565b61015061027d366004610deb565b6001600160a01b031660009081526020819052604090205490565b61022061054a565b6101506102ae366004610dd2565b61055e565b6102576102c1366004610dd2565b6007602052600090815260409020546001600160a01b031681565b6005546001600160a01b0316610257565b61016b610590565b61018b610303366004610c7a565b61059f565b610220610316366004610dd2565b61061a565b61018b610329366004610c7a565b6106b1565b61015061033c366004610e06565b6106bf565b61022061034f366004610deb565b6106ea565b60606003805461036390610e39565b80601f016020809104026020016040519081016040528092919081815260200182805461038f90610e39565b80156103dc5780601f106103b1576101008083540402835291602001916103dc565b820191906000526020600020905b8154815290600101906020018083116103bf57829003601f168201915b5050505050905090565b6000336103f4818585610763565b60019150505b92915050565b60003361040e858285610887565b610419858585610901565b506001949350505050565b6000818152600760205260409020546001600160a01b031633146104835760405162461bcd60e51b8152602060048201526011602482015270596f752063616e277420756e7374616b6560781b60448201526064015b60405180910390fd5b610495336104908361055e565b610aa5565b6006546040516323b872dd60e01b8152306004820152336024820152604481018390526001600160a01b03909116906323b872dd90606401600060405180830381600087803b1580156104e757600080fd5b505af11580156104fb573d6000803e3d6000fd5b50505060009182525060076020908152604080832080546001600160a01b03191690556008909152812055565b6000336103f481858561053b83836106bf565b6105459190610e89565b610763565b610552610b64565b61055c6000610bbe565b565b60008181526008602052604081205481906105799042610e9c565b9050600954816105899190610eaf565b9392505050565b60606004805461036390610e39565b600033816105ad82866106bf565b90508381101561060d5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b606482015260840161047a565b6104198286868403610763565b600654604051632142170760e11b8152336004820152306024820152604481018390526001600160a01b03909116906342842e0e90606401600060405180830381600087803b15801561066c57600080fd5b505af1158015610680573d6000803e3d6000fd5b50505060009182525060076020908152604080832080546001600160a01b0319163317905560089091529020429055565b6000336103f4818585610901565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6106f2610b64565b6001600160a01b0381166107575760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161047a565b61076081610bbe565b50565b6001600160a01b0383166107c55760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161047a565b6001600160a01b0382166108265760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161047a565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b600061089384846106bf565b905060001981146108fb57818110156108ee5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161047a565b6108fb8484848403610763565b50505050565b6001600160a01b0383166109655760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161047a565b6001600160a01b0382166109c75760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161047a565b6001600160a01b03831660009081526020819052604090205481811015610a3f5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161047a565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36108fb565b6001600160a01b038216610afb5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161047a565b8060026000828254610b0d9190610e89565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b6005546001600160a01b0316331461055c5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161047a565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600060208083528351808285015260005b81811015610c3d57858101830151858201604001528201610c21565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b0381168114610c7557600080fd5b919050565b60008060408385031215610c8d57600080fd5b610c9683610c5e565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b60008060008060808587031215610cd057600080fd5b610cd985610c5e565b9350610ce760208601610c5e565b925060408501359150606085013567ffffffffffffffff80821115610d0b57600080fd5b818701915087601f830112610d1f57600080fd5b813581811115610d3157610d31610ca4565b604051601f8201601f19908116603f01168101908382118183101715610d5957610d59610ca4565b816040528281528a6020848701011115610d7257600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b600080600060608486031215610dab57600080fd5b610db484610c5e565b9250610dc260208501610c5e565b9150604084013590509250925092565b600060208284031215610de457600080fd5b5035919050565b600060208284031215610dfd57600080fd5b61058982610c5e565b60008060408385031215610e1957600080fd5b610e2283610c5e565b9150610e3060208401610c5e565b90509250929050565b600181811c90821680610e4d57607f821691505b602082108103610e6d57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b808201808211156103fa576103fa610e73565b818103818111156103fa576103fa610e73565b80820281158282048414176103fa576103fa610e7356fea264697066735822122082adf491667bf03c778bd3ee64298d944ac76ffe1eaf6ec3b407a0c82a235c7764736f6c63430008120033",
    "sourceMap": "361:1116:37:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;547:63;;;;;;;;;160:25:38;;;148:2;133:18;547:63:37;;;;;;;;2154:98:19;;;:::i;:::-;;;;;;;:::i;4431:197::-;;;;;;:::i;:::-;;:::i;:::-;;;1351:14:38;;1344:22;1326:41;;1314:2;1299:18;4431:197:19;1186:187:38;588:200:26;;;;;;:::i;:::-;-1:-1:-1;;;588:200:26;;;;;;;;;;-1:-1:-1;;;;;;2815:33:38;;;2797:52;;2785:2;2770:18;588:200:26;2653:202:38;3242:106:19;3329:12;;3242:106;;5190:286;;;;;;:::i;:::-;;:::i;493:48:37:-;;;;;;:::i;:::-;;;;;;;;;;;;;;1124:351;;;;;;:::i;:::-;;:::i;:::-;;3091:91:19;;;3173:2;3520:36:38;;3508:2;3493:18;3091:91:19;3378:184:38;5871:234:19;;;;;;:::i;:::-;;:::i;416:18:37:-;;;;;-1:-1:-1;;;;;416:18:37;;;;;;-1:-1:-1;;;;;3748:32:38;;;3730:51;;3718:2;3703:18;416::37;3567:220:38;3406:125:19;;;;;;:::i;:::-;-1:-1:-1;;;;;3506:18:19;3480:7;3506:18;;;;;;;;;;;;3406:125;1831:101:18;;;:::i;923:195:37:-;;;;;;:::i;:::-;;:::i;440:47::-;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;440:47:37;;;1201:85:18;1273:6;;-1:-1:-1;;;;;1273:6:18;1201:85;;2365:102:19;;;:::i;6592:427::-;;;;;;:::i;:::-;;:::i;709:208:37:-;;;;;;:::i;:::-;;:::i;3727:189:19:-;;;;;;:::i;:::-;;:::i;3974:149::-;;;;;;:::i;:::-;;:::i;2081:198:18:-;;;;;;:::i;:::-;;:::i;2154:98:19:-;2208:13;2240:5;2233:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2154:98;:::o;4431:197::-;4514:4;719:10:28;4568:32:19;719:10:28;4584:7:19;4593:6;4568:8;:32::i;:::-;4617:4;4610:11;;;4431:197;;;;;:::o;5190:286::-;5317:4;719:10:28;5373:38:19;5389:4;719:10:28;5404:6:19;5373:15;:38::i;:::-;5421:27;5431:4;5437:2;5441:6;5421:9;:27::i;:::-;-1:-1:-1;5465:4:19;;5190:286;-1:-1:-1;;;;5190:286:19:o;1124:351:37:-;1185:21;;;;:12;:21;;;;;;-1:-1:-1;;;;;1185:21:37;1210:10;1185:35;1177:65;;;;-1:-1:-1;;;1177:65:37;;5043:2:38;1177:65:37;;;5025:21:38;5082:2;5062:18;;;5055:30;-1:-1:-1;;;5101:18:38;;;5094:47;5158:18;;1177:65:37;;;;;;;;;1252:43;1258:10;1270:24;1286:7;1270:15;:24::i;:::-;1252:5;:43::i;:::-;1339:3;;:52;;-1:-1:-1;;;1339:52:37;;1364:4;1339:52;;;5427:34:38;1371:10:37;5477:18:38;;;5470:43;5529:18;;;5522:34;;;-1:-1:-1;;;;;1339:3:37;;;;:16;;5362:18:38;;1339:52:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1408:21:37;;;;-1:-1:-1;1408:12:37;:21;;;;;;;;1401:28;;-1:-1:-1;;;;;;1401:28:37;;;1446:13;:22;;;;;1439:29;1124:351::o;5871:234:19:-;5959:4;719:10:28;6013:64:19;719:10:28;6029:7:19;6066:10;6038:25;719:10:28;6029:7:19;6038:9;:25::i;:::-;:38;;;;:::i;:::-;6013:8;:64::i;1831:101:18:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;923:195:37:-;986:7;1045:22;;;:13;:22;;;;;;986:7;;1027:40;;:15;:40;:::i;:::-;1005:62;;1098:13;;1084:11;:27;;;;:::i;:::-;1077:34;923:195;-1:-1:-1;;;923:195:37:o;2365:102:19:-;2421:13;2453:7;2446:14;;;;;:::i;6592:427::-;6685:4;719:10:28;6685:4:19;6766:25;719:10:28;6783:7:19;6766:9;:25::i;:::-;6739:52;;6829:15;6809:16;:35;;6801:85;;;;-1:-1:-1;;;6801:85:19;;6337:2:38;6801:85:19;;;6319:21:38;6376:2;6356:18;;;6349:30;6415:34;6395:18;;;6388:62;-1:-1:-1;;;6466:18:38;;;6459:35;6511:19;;6801:85:19;6135:401:38;6801:85:19;6920:60;6929:5;6936:7;6964:15;6945:16;:34;6920:8;:60::i;709:208:37:-;760:3;;:56;;-1:-1:-1;;;760:56:37;;781:10;760:56;;;5427:34:38;801:4:37;5477:18:38;;;5470:43;5529:18;;;5522:34;;;-1:-1:-1;;;;;760:3:37;;;;:20;;5362:18:38;;760:56:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;826:21:37;;;;-1:-1:-1;826:12:37;:21;;;;;;;;:34;;-1:-1:-1;;;;;;826:34:37;850:10;826:34;;;870:13;:22;;;;;895:15;870:40;;709:208::o;3727:189:19:-;3806:4;719:10:28;3860:28:19;719:10:28;3877:2:19;3881:6;3860:9;:28::i;3974:149::-;-1:-1:-1;;;;;4089:18:19;;;4063:7;4089:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3974:149::o;2081:198:18:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2169:22:18;::::1;2161:73;;;::::0;-1:-1:-1;;;2161:73:18;;6743:2:38;2161:73:18::1;::::0;::::1;6725:21:38::0;6782:2;6762:18;;;6755:30;6821:34;6801:18;;;6794:62;-1:-1:-1;;;6872:18:38;;;6865:36;6918:19;;2161:73:18::1;6541:402:38::0;2161:73:18::1;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;10504:370:19:-;-1:-1:-1;;;;;10635:19:19;;10627:68;;;;-1:-1:-1;;;10627:68:19;;7150:2:38;10627:68:19;;;7132:21:38;7189:2;7169:18;;;7162:30;7228:34;7208:18;;;7201:62;-1:-1:-1;;;7279:18:38;;;7272:34;7323:19;;10627:68:19;6948:400:38;10627:68:19;-1:-1:-1;;;;;10713:21:19;;10705:68;;;;-1:-1:-1;;;10705:68:19;;7555:2:38;10705:68:19;;;7537:21:38;7594:2;7574:18;;;7567:30;7633:34;7613:18;;;7606:62;-1:-1:-1;;;7684:18:38;;;7677:32;7726:19;;10705:68:19;7353:398:38;10705:68:19;-1:-1:-1;;;;;10784:18:19;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10835:32;;160:25:38;;;10835:32:19;;133:18:38;10835:32:19;;;;;;;10504:370;;;:::o;11155:441::-;11285:24;11312:25;11322:5;11329:7;11312:9;:25::i;:::-;11285:52;;-1:-1:-1;;11351:16:19;:37;11347:243;;11432:6;11412:16;:26;;11404:68;;;;-1:-1:-1;;;11404:68:19;;7958:2:38;11404:68:19;;;7940:21:38;7997:2;7977:18;;;7970:30;8036:31;8016:18;;;8009:59;8085:18;;11404:68:19;7756:353:38;11404:68:19;11514:51;11523:5;11530:7;11558:6;11539:16;:25;11514:8;:51::i;:::-;11275:321;11155:441;;;:::o;7473:818::-;-1:-1:-1;;;;;7599:18:19;;7591:68;;;;-1:-1:-1;;;7591:68:19;;8316:2:38;7591:68:19;;;8298:21:38;8355:2;8335:18;;;8328:30;8394:34;8374:18;;;8367:62;-1:-1:-1;;;8445:18:38;;;8438:35;8490:19;;7591:68:19;8114:401:38;7591:68:19;-1:-1:-1;;;;;7677:16:19;;7669:64;;;;-1:-1:-1;;;7669:64:19;;8722:2:38;7669:64:19;;;8704:21:38;8761:2;8741:18;;;8734:30;8800:34;8780:18;;;8773:62;-1:-1:-1;;;8851:18:38;;;8844:33;8894:19;;7669:64:19;8520:399:38;7669:64:19;-1:-1:-1;;;;;7815:15:19;;7793:19;7815:15;;;;;;;;;;;7848:21;;;;7840:72;;;;-1:-1:-1;;;7840:72:19;;9126:2:38;7840:72:19;;;9108:21:38;9165:2;9145:18;;;9138:30;9204:34;9184:18;;;9177:62;-1:-1:-1;;;9255:18:38;;;9248:36;9301:19;;7840:72:19;8924:402:38;7840:72:19;-1:-1:-1;;;;;7946:15:19;;;:9;:15;;;;;;;;;;;7964:20;;;7946:38;;8161:13;;;;;;;;;;:23;;;;;;8210:26;;160:25:38;;;8161:13:19;;8210:26;;133:18:38;8210:26:19;;;;;;;8247:37;12180:121;8567:535;-1:-1:-1;;;;;8650:21:19;;8642:65;;;;-1:-1:-1;;;8642:65:19;;9533:2:38;8642:65:19;;;9515:21:38;9572:2;9552:18;;;9545:30;9611:33;9591:18;;;9584:61;9662:18;;8642:65:19;9331:355:38;8642:65:19;8794:6;8778:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8946:18:19;;:9;:18;;;;;;;;;;;:28;;;;;;8999:37;160:25:38;;;8999:37:19;;133:18:38;8999:37:19;;;;;;;8567:535;;:::o;1359:130:18:-;1273:6;;-1:-1:-1;;;;;1273:6:18;719:10:28;1422:23:18;1414:68;;;;-1:-1:-1;;;1414:68:18;;9893:2:38;1414:68:18;;;9875:21:38;;;9912:18;;;9905:30;9971:34;9951:18;;;9944:62;10023:18;;1414:68:18;9691:356:38;2433:187:18;2525:6;;;-1:-1:-1;;;;;2541:17:18;;;-1:-1:-1;;;;;;2541:17:18;;;;;;;2573:40;;2525:6;;;2541:17;2525:6;;2573:40;;2506:16;;2573:40;2496:124;2433:187;:::o;196:548:38:-;308:4;337:2;366;355:9;348:21;398:6;392:13;441:6;436:2;425:9;421:18;414:34;466:1;476:140;490:6;487:1;484:13;476:140;;;585:14;;;581:23;;575:30;551:17;;;570:2;547:26;540:66;505:10;;476:140;;;480:3;665:1;660:2;651:6;640:9;636:22;632:31;625:42;735:2;728;724:7;719:2;711:6;707:15;703:29;692:9;688:45;684:54;676:62;;;;196:548;;;;:::o;749:173::-;817:20;;-1:-1:-1;;;;;866:31:38;;856:42;;846:70;;912:1;909;902:12;846:70;749:173;;;:::o;927:254::-;995:6;1003;1056:2;1044:9;1035:7;1031:23;1027:32;1024:52;;;1072:1;1069;1062:12;1024:52;1095:29;1114:9;1095:29;:::i;:::-;1085:39;1171:2;1156:18;;;;1143:32;;-1:-1:-1;;;927:254:38:o;1378:127::-;1439:10;1434:3;1430:20;1427:1;1420:31;1470:4;1467:1;1460:15;1494:4;1491:1;1484:15;1510:1138;1605:6;1613;1621;1629;1682:3;1670:9;1661:7;1657:23;1653:33;1650:53;;;1699:1;1696;1689:12;1650:53;1722:29;1741:9;1722:29;:::i;:::-;1712:39;;1770:38;1804:2;1793:9;1789:18;1770:38;:::i;:::-;1760:48;;1855:2;1844:9;1840:18;1827:32;1817:42;;1910:2;1899:9;1895:18;1882:32;1933:18;1974:2;1966:6;1963:14;1960:34;;;1990:1;1987;1980:12;1960:34;2028:6;2017:9;2013:22;2003:32;;2073:7;2066:4;2062:2;2058:13;2054:27;2044:55;;2095:1;2092;2085:12;2044:55;2131:2;2118:16;2153:2;2149;2146:10;2143:36;;;2159:18;;:::i;:::-;2234:2;2228:9;2202:2;2288:13;;-1:-1:-1;;2284:22:38;;;2308:2;2280:31;2276:40;2264:53;;;2332:18;;;2352:22;;;2329:46;2326:72;;;2378:18;;:::i;:::-;2418:10;2414:2;2407:22;2453:2;2445:6;2438:18;2493:7;2488:2;2483;2479;2475:11;2471:20;2468:33;2465:53;;;2514:1;2511;2504:12;2465:53;2570:2;2565;2561;2557:11;2552:2;2544:6;2540:15;2527:46;2615:1;2610:2;2605;2597:6;2593:15;2589:24;2582:35;2636:6;2626:16;;;;;;;1510:1138;;;;;;;:::o;2860:328::-;2937:6;2945;2953;3006:2;2994:9;2985:7;2981:23;2977:32;2974:52;;;3022:1;3019;3012:12;2974:52;3045:29;3064:9;3045:29;:::i;:::-;3035:39;;3093:38;3127:2;3116:9;3112:18;3093:38;:::i;:::-;3083:48;;3178:2;3167:9;3163:18;3150:32;3140:42;;2860:328;;;;;:::o;3193:180::-;3252:6;3305:2;3293:9;3284:7;3280:23;3276:32;3273:52;;;3321:1;3318;3311:12;3273:52;-1:-1:-1;3344:23:38;;3193:180;-1:-1:-1;3193:180:38:o;3792:186::-;3851:6;3904:2;3892:9;3883:7;3879:23;3875:32;3872:52;;;3920:1;3917;3910:12;3872:52;3943:29;3962:9;3943:29;:::i;4191:260::-;4259:6;4267;4320:2;4308:9;4299:7;4295:23;4291:32;4288:52;;;4336:1;4333;4326:12;4288:52;4359:29;4378:9;4359:29;:::i;:::-;4349:39;;4407:38;4441:2;4430:9;4426:18;4407:38;:::i;:::-;4397:48;;4191:260;;;;;:::o;4456:380::-;4535:1;4531:12;;;;4578;;;4599:61;;4653:4;4645:6;4641:17;4631:27;;4599:61;4706:2;4698:6;4695:14;4675:18;4672:38;4669:161;;4752:10;4747:3;4743:20;4740:1;4733:31;4787:4;4784:1;4777:15;4815:4;4812:1;4805:15;4669:161;;4456:380;;;:::o;5567:127::-;5628:10;5623:3;5619:20;5616:1;5609:31;5659:4;5656:1;5649:15;5683:4;5680:1;5673:15;5699:125;5764:9;;;5785:10;;;5782:36;;;5798:18;;:::i;5829:128::-;5896:9;;;5917:11;;;5914:37;;;5931:18;;:::i;5962:168::-;6035:9;;;6066;;6083:15;;;6077:22;;6063:37;6053:71;;6104:18;;:::i",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "EMISSION_RATE()": "01b8199a",
    "allowance(address,address)": "dd62ed3e",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "calculateTokens(uint256)": "71aa60fd",
    "decimals()": "313ce567",
    "decreaseAllowance(address,uint256)": "a457c2d7",
    "increaseAllowance(address,uint256)": "39509351",
    "name()": "06fdde03",
    "nft()": "47ccca02",
    "onERC721Received(address,address,uint256,bytes)": "150b7a02",
    "owner()": "8da5cb5b",
    "renounceOwnership()": "715018a6",
    "stake(uint256)": "a694fc3a",
    "symbol()": "95d89b41",
    "tokenOwnerOf(uint256)": "89885a59",
    "tokenStakedAt(uint256)": "24bf238c",
    "totalSupply()": "18160ddd",
    "transfer(address,uint256)": "a9059cbb",
    "transferFrom(address,address,uint256)": "23b872dd",
    "transferOwnership(address)": "f2fde38b",
    "unstake(uint256)": "2e17de78"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nft\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"EMISSION_RATE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"calculateTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nft\",\"outputs\":[{\"internalType\":\"contract IERC721\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tokenOwnerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tokenStakedAt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"unstake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"See {IERC721Receiver-onERC721Received}. Always returns `IERC721Receiver.onERC721Received.selector`.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/MyToken.t.sol\":\"MyToken\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x4ffc0547c02ad22925310c585c0f166f8759e2648a09e9b489100c42f15dd98d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15f52f51413a9de1ff191e2f6367c62178e1df7806d7880fe857a98b0b66253d\",\"dweb:/ipfs/QmaQG1fwfgUt5E9nu2cccFiV47B2V78MM1tCy1qB7n4MsH\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56\",\"dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/utils/ERC721Holder.sol\":{\"keccak256\":\"0x0108bf6a6ebd5f96678bed33a35947537263f96766131ee91461fb6485805028\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ae2d274bf3d56a6d49a9bbd0a4871c54997a82551eb3eb1c0c39dc98698ff8bf\",\"dweb:/ipfs/QmTT7ty5DPGAmRnx94Xu3TUDYGSPDVLN2bppJAjjedrg1e\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"test/MyToken.t.sol\":{\"keccak256\":\"0x57ce3f03c3e7ebad9be0c5dbacf18f5da7f20370ac32aeecba5b9a90032a9b57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f15d6af5628e959d330455279f12aab3778f0d0ede94ce97195192bc7c2f13ae\",\"dweb:/ipfs/QmeUbiMVkmtKYNCmWuALVbKvPSCXu76ydqrzUJRNUjaAzP\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.18+commit.87f61d96"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_nft",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "EMISSION_RATE",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "allowance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "calculateTokens",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "decimals",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "subtractedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "decreaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "addedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "increaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "nft",
          "outputs": [
            {
              "internalType": "contract IERC721",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "onERC721Received",
          "outputs": [
            {
              "internalType": "bytes4",
              "name": "",
              "type": "bytes4"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "stake"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenOwnerOf",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenStakedAt",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transfer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "unstake"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "allowance(address,address)": {
            "details": "See {IERC20-allowance}."
          },
          "approve(address,uint256)": {
            "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
          },
          "balanceOf(address)": {
            "details": "See {IERC20-balanceOf}."
          },
          "decimals()": {
            "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
          },
          "decreaseAllowance(address,uint256)": {
            "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
          },
          "increaseAllowance(address,uint256)": {
            "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
          },
          "name()": {
            "details": "Returns the name of the token."
          },
          "onERC721Received(address,address,uint256,bytes)": {
            "details": "See {IERC721Receiver-onERC721Received}. Always returns `IERC721Receiver.onERC721Received.selector`."
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
          },
          "symbol()": {
            "details": "Returns the symbol of the token, usually a shorter version of the name."
          },
          "totalSupply()": {
            "details": "See {IERC20-totalSupply}."
          },
          "transfer(address,uint256)": {
            "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
          },
          "transferFrom(address,address,uint256)": {
            "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":solmate/=lib/solmate/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/MyToken.t.sol": "MyToken"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
        "keccak256": "0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673",
        "urls": [
          "bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2",
          "dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0x4ffc0547c02ad22925310c585c0f166f8759e2648a09e9b489100c42f15dd98d",
        "urls": [
          "bzz-raw://15f52f51413a9de1ff191e2f6367c62178e1df7806d7880fe857a98b0b66253d",
          "dweb:/ipfs/QmaQG1fwfgUt5E9nu2cccFiV47B2V78MM1tCy1qB7n4MsH"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
        "urls": [
          "bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
          "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol": {
        "keccak256": "0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68",
        "urls": [
          "bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56",
          "dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol": {
        "keccak256": "0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da",
        "urls": [
          "bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708",
          "dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/utils/ERC721Holder.sol": {
        "keccak256": "0x0108bf6a6ebd5f96678bed33a35947537263f96766131ee91461fb6485805028",
        "urls": [
          "bzz-raw://ae2d274bf3d56a6d49a9bbd0a4871c54997a82551eb3eb1c0c39dc98698ff8bf",
          "dweb:/ipfs/QmTT7ty5DPGAmRnx94Xu3TUDYGSPDVLN2bppJAjjedrg1e"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "test/MyToken.t.sol": {
        "keccak256": "0x57ce3f03c3e7ebad9be0c5dbacf18f5da7f20370ac32aeecba5b9a90032a9b57",
        "urls": [
          "bzz-raw://f15d6af5628e959d330455279f12aab3778f0d0ede94ce97195192bc7c2f13ae",
          "dweb:/ipfs/QmeUbiMVkmtKYNCmWuALVbKvPSCXu76ydqrzUJRNUjaAzP"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/MyToken.t.sol",
    "id": 32760,
    "exportedSymbols": {
      "Context": [
        31280
      ],
      "ERC20": [
        29710
      ],
      "ERC721Holder": [
        30928
      ],
      "IERC165": [
        31491
      ],
      "IERC20": [
        29788
      ],
      "IERC20Metadata": [
        29813
      ],
      "IERC721": [
        30856
      ],
      "IERC721Receiver": [
        30874
      ],
      "MyToken": [
        32759
      ],
      "Ownable": [
        29123
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:1445:37",
    "nodes": [
      {
        "id": 32611,
        "nodeType": "PragmaDirective",
        "src": "32:24:37",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".18"
        ]
      },
      {
        "id": 32612,
        "nodeType": "ImportDirective",
        "src": "58:71:37",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        "file": "../lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 32760,
        "sourceUnit": 29711,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 32613,
        "nodeType": "ImportDirective",
        "src": "130:68:37",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "file": "../lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 32760,
        "sourceUnit": 29124,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 32614,
        "nodeType": "ImportDirective",
        "src": "199:85:37",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC721/utils/ERC721Holder.sol",
        "file": "../lib/openzeppelin-contracts/contracts/token/ERC721/utils/ERC721Holder.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 32760,
        "sourceUnit": 30929,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 32615,
        "nodeType": "ImportDirective",
        "src": "285:74:37",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "file": "../lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 32760,
        "sourceUnit": 30857,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 32759,
        "nodeType": "ContractDefinition",
        "src": "361:1116:37",
        "nodes": [
          {
            "id": 32624,
            "nodeType": "VariableDeclaration",
            "src": "416:18:37",
            "nodes": [],
            "constant": false,
            "functionSelector": "47ccca02",
            "mutability": "mutable",
            "name": "nft",
            "nameLocation": "431:3:37",
            "scope": 32759,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC721_$30856",
              "typeString": "contract IERC721"
            },
            "typeName": {
              "id": 32623,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 32622,
                "name": "IERC721",
                "nameLocations": [
                  "416:7:37"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 30856,
                "src": "416:7:37"
              },
              "referencedDeclaration": 30856,
              "src": "416:7:37",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC721_$30856",
                "typeString": "contract IERC721"
              }
            },
            "visibility": "public"
          },
          {
            "id": 32628,
            "nodeType": "VariableDeclaration",
            "src": "440:47:37",
            "nodes": [],
            "constant": false,
            "functionSelector": "89885a59",
            "mutability": "mutable",
            "name": "tokenOwnerOf",
            "nameLocation": "475:12:37",
            "scope": 32759,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
              "typeString": "mapping(uint256 => address)"
            },
            "typeName": {
              "id": 32627,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 32625,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "448:7:37",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "440:27:37",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                "typeString": "mapping(uint256 => address)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 32626,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "459:7:37",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 32632,
            "nodeType": "VariableDeclaration",
            "src": "493:48:37",
            "nodes": [],
            "constant": false,
            "functionSelector": "24bf238c",
            "mutability": "mutable",
            "name": "tokenStakedAt",
            "nameLocation": "528:13:37",
            "scope": 32759,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
              "typeString": "mapping(uint256 => uint256)"
            },
            "typeName": {
              "id": 32631,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 32629,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "501:7:37",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "493:27:37",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                "typeString": "mapping(uint256 => uint256)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 32630,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "512:7:37",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 32643,
            "nodeType": "VariableDeclaration",
            "src": "547:63:37",
            "nodes": [],
            "constant": false,
            "functionSelector": "01b8199a",
            "mutability": "mutable",
            "name": "EMISSION_RATE",
            "nameLocation": "562:13:37",
            "scope": 32759,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 32633,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "547:7:37",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "commonType": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "id": 32642,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "lValueRequested": false,
              "leftExpression": {
                "components": [
                  {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 32639,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "3530",
                      "id": 32634,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "579:2:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_50_by_1",
                        "typeString": "int_const 50"
                      },
                      "value": "50"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 32638,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "hexValue": "3130",
                        "id": 32635,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "584:2:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "**",
                      "rightExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 32636,
                          "name": "decimals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29198,
                          "src": "590:8:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
                            "typeString": "function () view returns (uint8)"
                          }
                        },
                        "id": 32637,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "590:10:37",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "src": "584:16:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "579:21:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 32640,
                "isConstant": false,
                "isInlineArray": false,
                "isLValue": false,
                "isPure": false,
                "lValueRequested": false,
                "nodeType": "TupleExpression",
                "src": "578:23:37",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "BinaryOperation",
              "operator": "/",
              "rightExpression": {
                "hexValue": "31",
                "id": 32641,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "604:6:37",
                "subdenomination": "days",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_86400_by_1",
                  "typeString": "int_const 86400"
                },
                "value": "1"
              },
              "src": "578:32:37",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 32659,
            "nodeType": "FunctionDefinition",
            "src": "617:86:37",
            "nodes": [],
            "body": {
              "id": 32658,
              "nodeType": "Block",
              "src": "667:36:37",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 32656,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 32652,
                      "name": "nft",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32624,
                      "src": "677:3:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC721_$30856",
                        "typeString": "contract IERC721"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 32654,
                          "name": "_nft",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32645,
                          "src": "691:4:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 32653,
                        "name": "IERC721",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30856,
                        "src": "683:7:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC721_$30856_$",
                          "typeString": "type(contract IERC721)"
                        }
                      },
                      "id": 32655,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "683:13:37",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC721_$30856",
                        "typeString": "contract IERC721"
                      }
                    },
                    "src": "677:19:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC721_$30856",
                      "typeString": "contract IERC721"
                    }
                  },
                  "id": 32657,
                  "nodeType": "ExpressionStatement",
                  "src": "677:19:37"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "4d79546f6b656e",
                    "id": 32648,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "649:9:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_245c734e6d4ec044daf7beffa09d54d4bafba490113c199734d790b04a7390e5",
                      "typeString": "literal_string \"MyToken\""
                    },
                    "value": "MyToken"
                  },
                  {
                    "hexValue": "4d544b",
                    "id": 32649,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "660:5:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_793539e36336d70961c91bdb898dff4b065dbb5ef5ac709025f5b68be91dd01e",
                      "typeString": "literal_string \"MTK\""
                    },
                    "value": "MTK"
                  }
                ],
                "id": 32650,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 32647,
                  "name": "ERC20",
                  "nameLocations": [
                    "643:5:37"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 29710,
                  "src": "643:5:37"
                },
                "nodeType": "ModifierInvocation",
                "src": "643:23:37"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 32646,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32645,
                  "mutability": "mutable",
                  "name": "_nft",
                  "nameLocation": "637:4:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 32659,
                  "src": "629:12:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 32644,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "629:7:37",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "628:14:37"
            },
            "returnParameters": {
              "id": 32651,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "667:0:37"
            },
            "scope": 32759,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 32691,
            "nodeType": "FunctionDefinition",
            "src": "709:208:37",
            "nodes": [],
            "body": {
              "id": 32690,
              "nodeType": "Block",
              "src": "750:167:37",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 32667,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "781:3:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 32668,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "785:6:37",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "781:10:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 32671,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "801:4:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MyToken_$32759",
                              "typeString": "contract MyToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MyToken_$32759",
                              "typeString": "contract MyToken"
                            }
                          ],
                          "id": 32670,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "793:7:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 32669,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "793:7:37",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 32672,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "793:13:37",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 32673,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32661,
                        "src": "808:7:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 32664,
                        "name": "nft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32624,
                        "src": "760:3:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC721_$30856",
                          "typeString": "contract IERC721"
                        }
                      },
                      "id": 32666,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "764:16:37",
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30811,
                      "src": "760:20:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 32674,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "760:56:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32675,
                  "nodeType": "ExpressionStatement",
                  "src": "760:56:37"
                },
                {
                  "expression": {
                    "id": 32681,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 32676,
                        "name": "tokenOwnerOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32628,
                        "src": "826:12:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 32678,
                      "indexExpression": {
                        "id": 32677,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32661,
                        "src": "839:7:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "826:21:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 32679,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "850:3:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 32680,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "854:6:37",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "850:10:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "826:34:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 32682,
                  "nodeType": "ExpressionStatement",
                  "src": "826:34:37"
                },
                {
                  "expression": {
                    "id": 32688,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 32683,
                        "name": "tokenStakedAt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32632,
                        "src": "870:13:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 32685,
                      "indexExpression": {
                        "id": 32684,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32661,
                        "src": "884:7:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "870:22:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 32686,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "895:5:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 32687,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "901:9:37",
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "895:15:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "870:40:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 32689,
                  "nodeType": "ExpressionStatement",
                  "src": "870:40:37"
                }
              ]
            },
            "functionSelector": "a694fc3a",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "stake",
            "nameLocation": "718:5:37",
            "parameters": {
              "id": 32662,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32661,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "732:7:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 32691,
                  "src": "724:15:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 32660,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "724:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "723:17:37"
            },
            "returnParameters": {
              "id": 32663,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "750:0:37"
            },
            "scope": 32759,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 32712,
            "nodeType": "FunctionDefinition",
            "src": "923:195:37",
            "nodes": [],
            "body": {
              "id": 32711,
              "nodeType": "Block",
              "src": "995:123:37",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    32699
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 32699,
                      "mutability": "mutable",
                      "name": "timeElapsed",
                      "nameLocation": "1013:11:37",
                      "nodeType": "VariableDeclaration",
                      "scope": 32711,
                      "src": "1005:19:37",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 32698,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1005:7:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 32706,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 32705,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 32700,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "1027:5:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 32701,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1033:9:37",
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "1027:15:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "baseExpression": {
                        "id": 32702,
                        "name": "tokenStakedAt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32632,
                        "src": "1045:13:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 32704,
                      "indexExpression": {
                        "id": 32703,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32693,
                        "src": "1059:7:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1045:22:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1027:40:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1005:62:37"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 32709,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 32707,
                      "name": "timeElapsed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32699,
                      "src": "1084:11:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "id": 32708,
                      "name": "EMISSION_RATE",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32643,
                      "src": "1098:13:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1084:27:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 32697,
                  "id": 32710,
                  "nodeType": "Return",
                  "src": "1077:34:37"
                }
              ]
            },
            "functionSelector": "71aa60fd",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "calculateTokens",
            "nameLocation": "932:15:37",
            "parameters": {
              "id": 32694,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32693,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "956:7:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 32712,
                  "src": "948:15:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 32692,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "948:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "947:17:37"
            },
            "returnParameters": {
              "id": 32697,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32696,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 32712,
                  "src": "986:7:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 32695,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "986:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "985:9:37"
            },
            "scope": 32759,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 32758,
            "nodeType": "FunctionDefinition",
            "src": "1124:351:37",
            "nodes": [],
            "body": {
              "id": 32757,
              "nodeType": "Block",
              "src": "1167:308:37",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 32723,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 32718,
                            "name": "tokenOwnerOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32628,
                            "src": "1185:12:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                              "typeString": "mapping(uint256 => address)"
                            }
                          },
                          "id": 32720,
                          "indexExpression": {
                            "id": 32719,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32714,
                            "src": "1198:7:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1185:21:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 32721,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1210:3:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 32722,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1214:6:37",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1210:10:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1185:35:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f752063616e277420756e7374616b65",
                        "id": 32724,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1222:19:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c8e0748cd11834ade53d49ed2b2a31b9f8a8c84255a8096ae0c56e5c38b2be57",
                          "typeString": "literal_string \"You can't unstake\""
                        },
                        "value": "You can't unstake"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c8e0748cd11834ade53d49ed2b2a31b9f8a8c84255a8096ae0c56e5c38b2be57",
                          "typeString": "literal_string \"You can't unstake\""
                        }
                      ],
                      "id": 32717,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1177:7:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 32725,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1177:65:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32726,
                  "nodeType": "ExpressionStatement",
                  "src": "1177:65:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 32728,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1258:3:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 32729,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1262:6:37",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1258:10:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 32731,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32714,
                            "src": "1286:7:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 32730,
                          "name": "calculateTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32712,
                          "src": "1270:15:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (uint256) view returns (uint256)"
                          }
                        },
                        "id": 32732,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1270:24:37",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 32727,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29527,
                      "src": "1252:5:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 32733,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1252:43:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32734,
                  "nodeType": "ExpressionStatement",
                  "src": "1252:43:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 32740,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1364:4:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MyToken_$32759",
                              "typeString": "contract MyToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MyToken_$32759",
                              "typeString": "contract MyToken"
                            }
                          ],
                          "id": 32739,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1356:7:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 32738,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1356:7:37",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 32741,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1356:13:37",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 32742,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1371:3:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 32743,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1375:6:37",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1371:10:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 32744,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32714,
                        "src": "1383:7:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 32735,
                        "name": "nft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32624,
                        "src": "1339:3:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC721_$30856",
                          "typeString": "contract IERC721"
                        }
                      },
                      "id": 32737,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1343:12:37",
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30821,
                      "src": "1339:16:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 32745,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1339:52:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32746,
                  "nodeType": "ExpressionStatement",
                  "src": "1339:52:37"
                },
                {
                  "expression": {
                    "id": 32750,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "1401:28:37",
                    "subExpression": {
                      "baseExpression": {
                        "id": 32747,
                        "name": "tokenOwnerOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32628,
                        "src": "1408:12:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 32749,
                      "indexExpression": {
                        "id": 32748,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32714,
                        "src": "1421:7:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1408:21:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32751,
                  "nodeType": "ExpressionStatement",
                  "src": "1401:28:37"
                },
                {
                  "expression": {
                    "id": 32755,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "1439:29:37",
                    "subExpression": {
                      "baseExpression": {
                        "id": 32752,
                        "name": "tokenStakedAt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32632,
                        "src": "1446:13:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 32754,
                      "indexExpression": {
                        "id": 32753,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32714,
                        "src": "1460:7:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1446:22:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32756,
                  "nodeType": "ExpressionStatement",
                  "src": "1439:29:37"
                }
              ]
            },
            "functionSelector": "2e17de78",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "unstake",
            "nameLocation": "1133:7:37",
            "parameters": {
              "id": 32715,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32714,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "1149:7:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 32758,
                  "src": "1141:15:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 32713,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1141:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1140:17:37"
            },
            "returnParameters": {
              "id": 32716,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1167:0:37"
            },
            "scope": 32759,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 32616,
              "name": "ERC20",
              "nameLocations": [
                "381:5:37"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 29710,
              "src": "381:5:37"
            },
            "id": 32617,
            "nodeType": "InheritanceSpecifier",
            "src": "381:5:37"
          },
          {
            "baseName": {
              "id": 32618,
              "name": "ERC721Holder",
              "nameLocations": [
                "388:12:37"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 30928,
              "src": "388:12:37"
            },
            "id": 32619,
            "nodeType": "InheritanceSpecifier",
            "src": "388:12:37"
          },
          {
            "baseName": {
              "id": 32620,
              "name": "Ownable",
              "nameLocations": [
                "402:7:37"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 29123,
              "src": "402:7:37"
            },
            "id": 32621,
            "nodeType": "InheritanceSpecifier",
            "src": "402:7:37"
          }
        ],
        "canonicalName": "MyToken",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          32759,
          29123,
          30928,
          30874,
          29710,
          29813,
          29788,
          31280
        ],
        "name": "MyToken",
        "nameLocation": "370:7:37",
        "scope": 32760,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 37
}